# axeIDList (java.lang.String:271; 275; 258; 286; 279) -- [Global] IDs of items that can chop down trees. Use ',' to split item id from metadata and ';' to split items.
# 
# needItem (boolean:true) -- [Global] Whether you need an item from the axeIDList to chop down a tree. Disabling will let you chop 
# trees with any item.
# 
# onlyDestroyUpwards (boolean:true) -- [Global, PerTree] Setting this to false will allow the chopping to move downward as well as upward (and 
# blocks below the one you break will be chopped)
# 
# destroyLeaves (boolean:true) -- [Global] Enabling this will make leaves be destroyed when trees are chopped.
# 
# shearLeaves (boolean:false) -- [Global] Enabling this will cause destroyed leaves to be sheared when a shearing item is in the hotbar 
# (ignored if destroyLeaves is false).
# 
# shearVines (boolean:false) -- [Global] Enabling this will shear /some/ of the vines on a tree when a shearing item is in the hotbar 
# (ignored if destroyLeaves is false).
# 
# shearIDList (java.lang.String:359) -- [Global] IDs of items that when placed in the hotbar will allow leaves to be sheared when shearLeaves 
# is true. Use ',' to split item id from metadata and ';' to split items.
# 
# logHardnessNormal (float:2.0) -- [Global] The hardness of logs for when you are using items that won't chop down the trees.
# 
# logHardnessModified (float:4.0) -- [Global] The hardness of logs for when you are using items that can chop down trees.
# 
# disableInCreative (boolean:false) -- [Global] Flag to disable tree chopping in Creative mode
# 
# disableCreativeDrops (boolean:false) -- [Global] Flag to disable drops in Creative mode
# 
# allowItemDamage (boolean:true) -- [Global] Enable to cause item damage based on number of blocks destroyed
# 
# allowMoreBlocksThanDamage (boolean:false) -- [Global] Enable to allow chopping down the entire tree even if your item does not have enough damage 
# remaining to cover the number of blocks.
# 
# sneakAction (java.lang.String:disable) -- [Global] Set sneakAction = "disable" to disable tree chopping while sneaking,
# set sneakAction = "enable" to only enable tree chopping while sneaking,
# set sneakAction = "none" to have tree chopping enabled regardless of sneaking.
# 
# maxHorLeafBreakDist (int:4) -- [Global, PerTree] The maximum horizontal distance that the leaf breaking effect will travel from the tree (use -1 for no limit).
# 
# maxHorLogBreakDist (int:16) -- [Global, PerTree] The maximum horizontal distance that the log breaking effect will travel (use -1 for no limit).
# 
# maxVerLogBreakDist (int:-1) -- [Global, PerTree] The maximum vertical distance that the log breaking effect will travel (use -1 for no limit).
# 
# requireLeafDecayCheck (boolean:true) -- [Global, PerTree] When true TreeCapitator will only instantly decay leaves that have actually been marked 
# for decay. Set to false if you want leaves to be destroyed regardless of their decay status 
# (hint: or for "leaf" blocks that are not really leaves).
# 
# damageMultiplier (float:1.0) -- [Global] Axes and shears will take damage this many times for each log broken. Remaining damage is 
# rounded and applied to tools when a tree is finished.
# 
# useIncreasingItemDamage (boolean:false) -- [Global] Set to true to have the per-block item damage amount increase after every 
# increaseDamageEveryXBlocks blocks are broken.
# 
# increaseDamageEveryXBlocks (int:8) -- [Global] When useIncreasingItemDamage=true the damage applied per block broken will increase each time 
# this many blocks are broken in a tree.
# 
# damageIncreaseAmount (float:1.0) -- [Global] When useIncreasingItemDamage=true the damage applied per block broken will increase by this 
# amount every increaseDamageEveryXBlocks blocks broken in a tree.
# 
# allowSmartTreeDetection (boolean:true) -- [Global] Set to false to disable TreeCapitator Smart Tree Detection.
# Smart Tree Detection counts the number of leaf blocks that are adjacent to the
# top-most connected log block at the x, z location of a log you've broken. If
# there are at least minLeavesToID leaf blocks within maxLeafIDDist blocks then
# TreeCapitator considers it a tree and allows chopping.
# WARNING: Disabling Smart Tree Detection will remove the only safeguard against
# accidentally destroying a log structure.  Make sure you know what you're doing!
# 
# useStrictBlockPairing (boolean:true) -- [Global] Set to true if you want only the log/leaf blocks listed with each log in a tree
# to break when that log type is chopped.  When set to false it will break
# any log/leaf type blocks connected to the tree, not just the types for that tree.
# 
# enableEnchantmentMode (boolean:false) -- [Global] Toggle for whether or not to use the Treecapitating enchantment as opposed to requiring an item 
# to be in the axeIDList to chop a tree.
# 
# enchantmentID (int:187) -- [Global] The internal ID for the Treecapitating enchantment. Change this if the default ID is conflicting 
# with another mod.
# 
# **ONLY EDIT WHAT IS BELOW THIS**
# 
# Mon Nov 25 21:13:50 CST 2013
allowItemDamage=true
allowMoreBlocksThanDamage=false
allowSmartTreeDetection=true
axeIDList=271; 275; 258; 286; 279
damageIncreaseAmount=1.0
damageMultiplier=1.0
destroyLeaves=true
disableCreativeDrops=false
disableInCreative=false
enableEnchantmentMode=false
enchantmentID=187
increaseDamageEveryXBlocks=8
logHardnessModified=4.0
logHardnessNormal=2.0
maxHorLeafBreakDist=4
maxHorLogBreakDist=16
maxVerLogBreakDist=-1
needItem=true
onlyDestroyUpwards=true
requireLeafDecayCheck=true
shearIDList=359
shearLeaves=false
shearVines=false
sneakAction=disable
useIncreasingItemDamage=false
useStrictBlockPairing=true
